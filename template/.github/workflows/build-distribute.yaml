name: Build & Distribute

on:
  workflow_dispatch:
    inputs:
      reference:
        description: 'Ref. (Tag, Branch or Commit)'
        required: true
        default: 'master'
        type: 'text'
      environment:
        description: 'Environment'
        required: true
        default: 'qa'
        type: choice
        options:
          - qa
          - client
          - prod
      platform:
        description: 'Platform'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - ios
          - android

jobs:
  build:
    name: Build
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
          - platform: android
            os: ubuntu-latest

          - platform: ios
            os: macos-latest
    steps:
      - name: Precondition
        id: skip
        run: |
          should_skip=${{ (matrix.platform == 'ios' && github.event.inputs.platform == 'android') || (matrix.platform == 'android' && github.event.inputs.platform == 'ios') }}
          echo "::set-output name=should_skip::$should_skip"

      - name: Checkout
        if: steps.skip.outputs.should_skip == 'false'
        uses: actions/checkout@v3
        with:
          ref: ${{github.event.inputs.reference}}
          fetch-depth: 0
          lfs: true

      - name: CocoaPods cache
        if: matrix.os == 'macos-latest' && steps.skip.outputs.should_skip == 'false'
        uses: actions/cache@v3
        with:
          key: cocoapods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: cocoapods-
          path: |
            ios/Pods
            ios/ProjectName.xcworkspace

      - name: Gradle cache
        if: steps.skip.outputs.should_skip == 'false'
        uses: actions/cache@v2
        with:
          key: gradle-${{ hashFiles('**/gradle.properties') }}
          restore-keys: gradle-
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper

      - name: Setup Java
        if: steps.skip.outputs.should_skip == 'false'
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Ruby
        if: steps.skip.outputs.should_skip == 'false'
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Node.js
        if: steps.skip.outputs.should_skip == 'false'
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.1'
          cache: 'yarn'

      - name: Setup dependencies
        if: steps.skip.outputs.should_skip == 'false'
        run: make dependencies

      - name: Setup Xcode
        if: matrix.os == 'macos-latest' && steps.skip.outputs.should_skip == 'false'
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '^15.2.0'

      - name: Setup Provisioning Certificate
        if: matrix.os == 'macos-latest' && steps.skip.outputs.should_skip == 'false'
        id: write_certificate_file
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: 'certificate.p12'
          encodedString: ${{ secrets.MIREGO_APPLE_PROVISIONING_CERTIFICATE_BASE64 }}

      - name: Build with Fastlane
        if: steps.skip.outputs.should_skip == 'false'
        env:
          MIREGO_APPLE_PROVISIONING_CERTIFICATE_FILE_PATH: ${{ steps.write_certificate_file.outputs.filePath }}
          MIREGO_APPLE_PROVISIONING_CERTIFICATE_PASSWORD: ${{ secrets.MIREGO_APPLE_PROVISIONING_CERTIFICATE_PASSWORD }}
          APP_CENTER_API_TOKEN: ${{ secrets.MIREGO_APP_CENTER_API_TOKEN }}
          # APP_STORE_CONNECT_API_KEY_FILE_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_FILE_CONTENT }}
          # GOOGLE_PLAY_STORE_JSON_KEY: ${{ secrets.GOOGLE_PLAY_STORE_JSON_KEY }}
        run: |
          bundle exec fastlane build_${{ matrix.platform }}_${{ github.event.inputs.environment || 'qa' }} --env ${{ github.event.inputs.environment || 'qa' }} --verbose

      - name: Upload Artifacts
        if: github.event.inputs.platform == 'ios' && github.event.inputs.environment == 'production' && steps.skip.outputs.should_skip == 'false'
        uses: actions/upload-artifact@v2
        with:
          path: |
            ${{ env.IOS_ARCHIVE_PATH }}
            ${{ env.ANDROID_APK_PATH }}
          if-no-files-found: warn
  bump_version:
    name: Bump Build Version
    runs-on: ubuntu-latest
    needs: build
    if: github.event.inputs.environment == 'qa'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{github.event.inputs.reference}}
          fetch-depth: 0

      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.1'
          cache: 'yarn'

      - name: Setup dependencies
        run: make dependencies

      - name: Bump build version
        run: make build-version
